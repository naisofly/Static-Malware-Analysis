import os
import sys
import shutil
import re
import collections
import pprint

walk_dir = sys.argv[1]

print('walk_dir = ' + walk_dir)

# If your current working directory may change during script execution, it's recommended to
# immediately convert program arguments to an absolute path. Then the variable root below will
# be an absolute path as well. Example:
walk_dir = os.path.abspath(walk_dir)
print('walk_dir (absolute) = ' + os.path.abspath(walk_dir))

oep_names = open("/home/tarun/Desktop/OEPNames.txt", 'a')

cnt = 0

for root, subdirs, files in os.walk(walk_dir):
    list_file_path = os.path.join(root, '')


    filename = "peinfo-full.txt"

    if filename in files:
        file_path = os.path.join(root, filename)

        vx_hash = os.path.basename(os.path.normpath(root))

        with open(file_path) as f:
            lines = re.findall(r"\baddressofentrypoint:.*\b", f.read().lower())  # returns 1 line

            if lines:

                cnt += 1
                for line in lines:
                    oep = line.split()[1] # original entry point hex value
                    # print "\n" + vx_hash + " \t " + oep + " \n "
                    with open("/home/tarun/Documents/extracted VirusShare_00189/raw/VirusShare_"+vx_hash, 'rb') as v:

                        # print('%s \t int %d \t hex %d\n\n' % (oep, int(oep, 0), int(oep, 16)))
                        # address point converted from hex to int --> int(oep, 16)
                        v.read(int(oep, 16) - 127)  # read & ignored values before the [-127,127] offset region
                        strArr = v.read(255)  # read next values in offset region

                        # create vector files
                        with open("/home/tarun/Desktop/OEP/"+vx_hash+".txt", 'a') as w:
                            if strArr != " ":
                                for ch in strArr:
                                    # print ord(ch),
                                    w.write('%d,' % ord(ch)) # ord(ch) "byte in position" value in interval [0,255]
                                w.write("\n")
                                oep_names.write(vx_hash+".txt \n") # add filename to list of files processed

print('\n Count: %d' % cnt)  # print number of files processed